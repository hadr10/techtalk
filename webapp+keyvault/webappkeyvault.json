{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "webAppName": {
        "type": "string",
        "metadata": {
          "description": "Base name of the resource such as web app name and app service plan"
        },
        "minLength": 2
      },
      "sku":{
        "type": "string",
        "metadata": {
          "description": "The SKU of App Service Plan, by default is Standard S1"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources"
        }
      },
      "repourl": {
        "type": "string",
        "metadata": {
          "description": "URL for github project"
        }
      },
      "branch": {
        "type": "string",
        "metadata": {
          "description": "The branch of github repository to deploy"
        }
      },
      "keyVaultName": {
        "type": "string",
        "metadata": {
          "description": "key vault name"
        }
      },
      "objectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
        }
      },
      "keysPermissions": {
      "type": "array",
      "defaultValue": [
        "list", "get"
      ],
      "metadata": {
        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
        }
      },
      "secretsPermissions": {
      "type": "array",
      "defaultValue": [
        "list", "get"
      ],
      "metadata": {
        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
        }
      },
      "secretName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the secret that you want to create."
        }
      },
      "secretValue": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the value of the secret that you want to create."
        }
      }
    },
    "variables": {
      "webAppPortalName": "[concat(parameters('webAppName'), '-webapp')]",
      "appServicePlanName": "[concat('AppServicePlan-', parameters('webAppName'))]",
      "skuname": "Standard",
      "enabledForDeployment": true,
      "enabledForDiskEncryption": true,
      "enabledForTemplateDeployment": true
    },
    "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
    {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Web/sites",
        "kind": "app",
        "name": "[variables('webAppPortalName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          ],
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
          "name": "[variables('webAppPortalName')]",
          "siteConfig": {
            "appSettings": [
            {
              "name": "test",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=https://', parameters('keyVaultName'), '.vault.azure.net/secrets/password/8b219e1434024e42985ba9af8e4f242a)')]"
            }
            ]
          }
        },
        "resources": [
            {
               "condition": "[greater(length(parameters('repourl')), 0)]",
               "apiVersion": "2018-02-01",
               "name": "web",
               "type": "sourcecontrols",
               "dependsOn": [
                  "[resourceId('Microsoft.Web/Sites', variables('webAppPortalName'))]"
               ],
               "properties": {
                  "repoUrl": "[parameters('repourl')]",
                  "branch": "[parameters('branch')]",
                  "IsManualIntegration": false
               }
            }
         ]
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "name": "[parameters('keyVaultName')]",
        "apiVersion": "2018-02-14",
        "location": "[resourceGroup().location]",
        "dependsOn": [
        ],
        "properties": {
          "enabledForDeployment": "[variables('enabledForDeployment')]",
          "enabledForDiskEncryption": "[variables('enabledForDiskEncryption')]",
          "enabledForTemplateDeployment": "[variables('enabledForTemplateDeployment')]",
          "tenantId": "[subscription().tenantId]",
          "sku": {
            "name": "[variables('skuName')]",
            "family": "A"
          },
          "accessPolicies":[
            {
              "objectId": "[parameters('objectId')]",
              "tenantId": "[subscription().tenantId]",
              "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
              }
            },
            {
              "tenantId": "[reference(concat('Microsoft.Web/sites/',  variables('webAppPortalName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').tenantId]",
              "objectId": "[reference(concat('Microsoft.Web/sites/',  variables('webAppPortalName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
              "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
              }
            }
          ],
          "networkAcls": {
            "value": {
              "defaultAction": "Allow",
              "bypass": "AzureServices"
            }
          }
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "name": "[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
        "apiVersion": "2018-02-14",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ],
        "properties": {
          "value": "[parameters('secretValue')]"
        }
      }
    ]
  }